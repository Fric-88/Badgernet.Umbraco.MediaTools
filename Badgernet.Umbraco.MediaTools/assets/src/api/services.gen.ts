// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { DownloadMediaData, DownloadMediaResponse, FilterGalleryData, FilterGalleryResponse, GetGalleryInfoResponse, ListFoldersResponse, ProcessImagesData, ProcessImagesResponse, RenameMediaData, RenameMediaResponse, ReplaceImageData, ReplaceImageResponse, RecycleMediaData, RecycleMediaResponse, GetSettingsData, GetSettingsResponse, SetSettingsData, SetSettingsResponse } from './types.gen';

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown OK
 * @throws ApiError
 */
export const downloadMedia = (data: DownloadMediaData = {}): CancelablePromise<DownloadMediaResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/gallery/download',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown OK
 * @throws ApiError
 */
export const filterGallery = (data: FilterGalleryData = {}): CancelablePromise<FilterGalleryResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/gallery/filter',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * @returns unknown OK
 * @throws ApiError
 */
export const getGalleryInfo = (): CancelablePromise<GetGalleryInfoResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/gallery/get-info'
}); };

/**
 * @returns string OK
 * @throws ApiError
 */
export const listFolders = (): CancelablePromise<ListFoldersResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/gallery/list-folders'
}); };

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown OK
 * @throws ApiError
 */
export const processImages = (data: ProcessImagesData = {}): CancelablePromise<ProcessImagesResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/gallery/process',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        400: 'Bad Request'
    }
}); };

/**
 * @param data The data for the request.
 * @param data.mediaId
 * @param data.newName
 * @returns unknown OK
 * @throws ApiError
 */
export const renameMedia = (data: RenameMediaData = {}): CancelablePromise<RenameMediaResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/gallery/rename',
    query: {
        mediaId: data.mediaId,
        newName: data.newName
    },
    errors: {
        400: 'Bad Request'
    }
}); };

/**
 * @param data The data for the request.
 * @param data.id
 * @param data.saveAs
 * @param data.formData
 * @returns unknown OK
 * @throws ApiError
 */
export const replaceImage = (data: ReplaceImageData = {}): CancelablePromise<ReplaceImageResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/gallery/replace',
    query: {
        id: data.id,
        saveAs: data.saveAs
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
    errors: {
        400: 'Bad Request'
    }
}); };

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown OK
 * @throws ApiError
 */
export const recycleMedia = (data: RecycleMediaData = {}): CancelablePromise<RecycleMediaResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/gallery/trash',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * @param data The data for the request.
 * @param data.userKey
 * @returns unknown OK
 * @throws ApiError
 */
export const getSettings = (data: GetSettingsData = {}): CancelablePromise<GetSettingsResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/settings/get',
    query: {
        userKey: data.userKey
    }
}); };

/**
 * @param data The data for the request.
 * @param data.userKey
 * @param data.requestBody
 * @returns string OK
 * @throws ApiError
 */
export const setSettings = (data: SetSettingsData = {}): CancelablePromise<SetSettingsResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/settings/set',
    query: {
        userKey: data.userKey
    },
    body: data.requestBody,
    mediaType: 'application/json',
    responseHeader: 'Umb-Notifications'
}); };